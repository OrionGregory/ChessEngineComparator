{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cs495\\\\ChessEngineComparator\\\\django-template\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is authenticated when the component mounts\n  React.useEffect(() => {\n    // This is a simple example - replace with your actual auth check\n    const checkAuthStatus = async () => {\n      try {\n        // In a real app, you would check with your backend\n        // For now, we'll just simulate this by checking localStorage\n        const token = localStorage.getItem('authToken');\n        setIsAuthenticated(!!token);\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Create theme based on current mode\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '#1976d2' : '#90caf9'\n      },\n      secondary: {\n        main: mode === 'light' ? '#dc004e' : '#f48fb1'\n      },\n      background: {\n        default: mode === 'light' ? '#f5f5f5' : '#121212',\n        paper: mode === 'light' ? '#ffffff' : '#1e1e1e'\n      }\n    },\n    shape: {\n      borderRadius: 8\n    },\n    typography: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      h4: {\n        fontWeight: 600\n      }\n    }\n  }), [mode]);\n  const toggleTheme = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n\n  // For demonstration, simulate a login\n  const handleLogin = () => {\n    localStorage.setItem('authToken', 'demo-token');\n    setIsAuthenticated(true);\n  };\n\n  // Protected route component\n  const ProtectedRoute = ({\n    children,\n    ...rest\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      render: ({\n        location\n      }) => isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(LoginPage, {\n            toggleTheme: toggleTheme,\n            mode: mode,\n            onLoginSuccess: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Dashboard Coming Soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            toggleTheme: toggleTheme,\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6juUVGl78CpIu3V+kUtEdLqKjxc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","BrowserRouter","Router","Route","Switch","Redirect","ThemeProvider","createTheme","CssBaseline","LoginPage","HomePage","jsxDEV","_jsxDEV","App","_s","mode","setMode","isAuthenticated","setIsAuthenticated","useEffect","checkAuthStatus","token","localStorage","getItem","error","console","theme","palette","primary","main","secondary","background","default","paper","shape","borderRadius","typography","fontFamily","h4","fontWeight","toggleTheme","prevMode","handleLogin","setItem","ProtectedRoute","children","rest","render","location","to","pathname","state","from","fileName","_jsxFileName","lineNumber","columnNumber","path","onLoginSuccess","exact","_c","$RefreshReg$"],"sources":["D:/Cs495/ChessEngineComparator/django-template/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  // Check if user is authenticated when the component mounts\n  React.useEffect(() => {\n    // This is a simple example - replace with your actual auth check\n    const checkAuthStatus = async () => {\n      try {\n        // In a real app, you would check with your backend\n        // For now, we'll just simulate this by checking localStorage\n        const token = localStorage.getItem('authToken');\n        setIsAuthenticated(!!token);\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        setIsAuthenticated(false);\n      }\n    };\n    \n    checkAuthStatus();\n  }, []);\n\n  // Create theme based on current mode\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          primary: {\n            main: mode === 'light' ? '#1976d2' : '#90caf9',\n          },\n          secondary: {\n            main: mode === 'light' ? '#dc004e' : '#f48fb1',\n          },\n          background: {\n            default: mode === 'light' ? '#f5f5f5' : '#121212',\n            paper: mode === 'light' ? '#ffffff' : '#1e1e1e',\n          },\n        },\n        shape: {\n          borderRadius: 8,\n        },\n        typography: {\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          h4: {\n            fontWeight: 600,\n          },\n        },\n      }),\n    [mode],\n  );\n\n  const toggleTheme = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  // For demonstration, simulate a login\n  const handleLogin = () => {\n    localStorage.setItem('authToken', 'demo-token');\n    setIsAuthenticated(true);\n  };\n\n  // Protected route component\n  const ProtectedRoute = ({ children, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          isAuthenticated ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage \n              toggleTheme={toggleTheme} \n              mode={mode} \n              onLoginSuccess={handleLogin}\n            />\n          </Route>\n          \n          <ProtectedRoute path=\"/dashboard\">\n            {/* Dashboard component will be added later */}\n            <div>Dashboard Coming Soon</div>\n          </ProtectedRoute>\n          \n          <ProtectedRoute path=\"/\" exact>\n            <HomePage toggleTheme={toggleTheme} mode={mode} />\n          </ProtectedRoute>\n          \n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}